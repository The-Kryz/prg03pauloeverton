/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.atividade07.view;

import br.com.ifba.atividade07.classe.ContaBanco;
import br.com.ifba.atividade07.view.AbrirConta;
import br.com.ifba.atividade07.view.Depositar;
import br.com.ifba.atividade07.view.Sacar;
import javax.swing.JOptionPane;

/**
 *
 * @author dudan
 */
public class banco extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(banco.class.getName());

    // CAMPO MAIS IMPORTANTE: É aqui que guardo o objeto da conta que está ativa na tela.
    private ContaBanco contaAtual = null;

    /**
     * Creates new form banco
     */
    public banco() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnabrirconta = new javax.swing.JButton();
        btnfecharconta = new javax.swing.JButton();
        btndepositar = new javax.swing.JButton();
        btnsacar = new javax.swing.JButton();
        btnpagarmensal = new javax.swing.JButton();
        lblnumconta = new javax.swing.JLabel();
        lblsaldoconta = new javax.swing.JLabel();
        lblnomeconta = new javax.swing.JLabel();
        lbltipoconta = new javax.swing.JLabel();
        lblstatusconta = new javax.swing.JLabel();
        lblnumcontainput = new javax.swing.JLabel();
        lblnomecontainput = new javax.swing.JLabel();
        lblsaldocontainput = new javax.swing.JLabel();
        lbltipocontainput = new javax.swing.JLabel();
        lblstatuscontainput = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnabrirconta.setText("Abrir Conta");
        btnabrirconta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnabrircontaActionPerformed(evt);
            }
        });

        btnfecharconta.setText("Fechar conta");
        btnfecharconta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfecharcontaActionPerformed(evt);
            }
        });

        btndepositar.setText("Depositar");
        btndepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndepositarActionPerformed(evt);
            }
        });

        btnsacar.setText("Sacar");
        btnsacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsacarActionPerformed(evt);
            }
        });

        btnpagarmensal.setText("Pagar Mensal");
        btnpagarmensal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpagarmensalActionPerformed(evt);
            }
        });

        lblnumconta.setText("Conta N°:");

        lblsaldoconta.setText("Saldo");

        lblnomeconta.setText("Nome:");

        lbltipoconta.setText("Tipo:");

        lblstatusconta.setText("Status");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(btnsacar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbltipoconta, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(btndepositar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblsaldoconta, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(btnfecharconta)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblnomeconta, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(btnabrirconta)
                            .addGap(29, 29, 29)
                            .addComponent(lblnumconta, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnpagarmensal)
                        .addGap(18, 18, 18)
                        .addComponent(lblstatusconta, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblstatuscontainput, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .addComponent(lblnumcontainput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblnomecontainput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbltipocontainput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblsaldocontainput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnabrirconta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblnumconta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblnumcontainput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnfecharconta)
                        .addComponent(lblnomeconta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblnomecontainput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btndepositar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblsaldoconta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblsaldocontainput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnsacar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbltipoconta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbltipocontainput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnpagarmensal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblstatusconta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblstatuscontainput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(119, 119, 119))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Meu método para atualizar todos os rótulos de uma vez.
    private void atualizarLabels() {
        if (this.contaAtual != null) {
            // Pego os dados do objeto contaAtual e coloco nos rótulos de input:
            lblnumcontainput.setText(String.valueOf(this.contaAtual.getNumConta()));
            lblnomecontainput.setText(this.contaAtual.getDono());
            // Formato o saldo para mostrar "R$ XX.XX"
            lblsaldocontainput.setText(String.format("R$ %.2f", this.contaAtual.getSaldo()));
            lbltipocontainput.setText(this.contaAtual.getTipo());
            lblstatuscontainput.setText(this.contaAtual.isStatus() ? "Ativa" : "Inativa");
        } else {
            // Se a conta for nula, limpo o campo de número (o resto deveria ser limpo também)
            lblnumcontainput.setText("");
            // ... (adicionar limpeza para os outros labels)
        }
    }

    // Ação do botão "Abrir Conta"
    private void btnabrircontaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnabrircontaActionPerformed

        AbrirConta tela = new AbrirConta(this, true); // Crio a tela de abertura
        tela.setVisible(true); // O código PAUSA AQUI até o JDialog fechar

        // Pego o objeto da conta que foi criado no JDialog.
        ContaBanco contaRecebida = tela.getContaCriada();

        if (contaRecebida != null) {
            this.contaAtual = contaRecebida; // ARMAZENO o objeto NOVO no meu campo global!
            atualizarLabels(); // Atualizo a tela com os dados da conta que acabei de receber
        }

        //testa se nao receber lixo e se não, seta tudo certinho.. PS: isso é para esse IF ai em cima, mas se eu coloco ele em cima, quebra meu codigo.
    }//GEN-LAST:event_btnabrircontaActionPerformed

    // Ação do botão "Depositar"
    private void btndepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndepositarActionPerformed

        // 1. Verifico se existe um objeto de conta para operar
        if (this.contaAtual == null) {
            JOptionPane.showMessageDialog(this, "Crie uma conta antes de depositar.", "Erro", JOptionPane.ERROR_MESSAGE);
            return; // Se não tem conta, paro aqui.
        }

        if (contaAtual.isStatus() == false) {
            JOptionPane.showMessageDialog(this, "Conta inativa, operação cancelada.", "Erro", JOptionPane.ERROR_MESSAGE);
            return; // conta inativa. 
        }

        // Crio a tela de depósito, passando o objeto DA CONTA ATUAL (this.contaAtual)
        // Isso é o "passar por referência": a tela Depositar vai mudar ESTE mesmo objeto.
        Depositar tela = new Depositar(this, true, this.contaAtual);
        tela.setVisible(true); // O código PAUSA AQUI, esperando o depósito.

        // O código continua APÓS o JDialog fechar (o saldo em this.contaAtual já foi alterado).
        atualizarLabels(); // Chamo o método para RECARREGAR os rótulos e mostrar o novo saldo.

    }//GEN-LAST:event_btndepositarActionPerformed

    // Ação do botão "Sacar"
    private void btnsacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsacarActionPerformed
        // 1. Verifico se existe um objeto de conta para operar
        if (this.contaAtual == null) {
            JOptionPane.showMessageDialog(this, "Crie uma conta antes de sacar.", "Erro", JOptionPane.ERROR_MESSAGE);
            return; // Se não tem conta, paro aqui.
        }

        if (contaAtual.isStatus() == false) {
            JOptionPane.showMessageDialog(this, "Conta inativa, operação cancelada.", "Erro", JOptionPane.ERROR_MESSAGE);
            return; // conta inativa. 
        }

        // Crio a tela de saque, passando o objeto DA CONTA ATUAL (this.contaAtual)
        // Isso é o "passar por referência": a tela Depositar vai mudar ESTE mesmo objeto.
        Sacar tela = new Sacar(this, true, this.contaAtual);
        tela.setVisible(true);

        // O código continua APÓS o JDialog fechar (o saldo em this.contaAtual já foi alterado).
        atualizarLabels(); // Chamo o método para RECARREGAR os rótulos e mostrar o novo saldo.


    }//GEN-LAST:event_btnsacarActionPerformed

    // Ação do botão "Pagar mensalidade"
    private void btnpagarmensalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpagarmensalActionPerformed

        // 1. Verifico se existe um objeto de conta para operar
        if (this.contaAtual == null) {
            JOptionPane.showMessageDialog(this, "Crie uma conta antes de pagar a mensalidade.", "Erro", JOptionPane.ERROR_MESSAGE);
            return; // Se não tem conta, paro aqui.
        }

        if (contaAtual.isStatus() == false) {
            JOptionPane.showMessageDialog(this, "Conta inativa, operação cancelada.", "Erro", JOptionPane.ERROR_MESSAGE);
            return; // conta inativa. 
        }

        //chama a função de pagar mensalidade
        contaAtual.mensalidade();

        // O código continua APÓS o JDialog fechar (o saldo em this.contaAtual já foi alterado).
        atualizarLabels();
    }//GEN-LAST:event_btnpagarmensalActionPerformed

    private void btnfecharcontaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfecharcontaActionPerformed

        // 1. Verifico se existe um objeto de conta para operar
        if (this.contaAtual == null) {
            JOptionPane.showMessageDialog(this, "Crie uma conta antes de querer fechar a conta :/", "Erro", JOptionPane.ERROR_MESSAGE);
            return; // Se não tem conta, paro aqui.
        }

        //função de fechar a conta
        contaAtual.fecharConta();

        // O código continua APÓS o JDialog fechar (o saldo em this.contaAtual já foi alterado).
        atualizarLabels();
    }//GEN-LAST:event_btnfecharcontaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new banco().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnabrirconta;
    private javax.swing.JButton btndepositar;
    private javax.swing.JButton btnfecharconta;
    private javax.swing.JButton btnpagarmensal;
    private javax.swing.JButton btnsacar;
    private javax.swing.JLabel lblnomeconta;
    private javax.swing.JLabel lblnomecontainput;
    private javax.swing.JLabel lblnumconta;
    private javax.swing.JLabel lblnumcontainput;
    private javax.swing.JLabel lblsaldoconta;
    private javax.swing.JLabel lblsaldocontainput;
    private javax.swing.JLabel lblstatusconta;
    private javax.swing.JLabel lblstatuscontainput;
    private javax.swing.JLabel lbltipoconta;
    private javax.swing.JLabel lbltipocontainput;
    // End of variables declaration//GEN-END:variables
}
